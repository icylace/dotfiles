# This file contains default non-project-specific settings for 'stack', used
# in all projects.  For more information about stack's configuration, see
# http://docs.haskellstack.org/en/stable/yaml_configuration/

# The following parameters are used by "stack new" to automatically fill fields
# in the cabal config. We recommend uncommenting them and filling them out if
# you intend to use 'stack new'.
# See https://docs.haskellstack.org/en/stable/yaml_configuration/#templates
templates:
  params:
#    author-name:
#    author-email:
#    copyright:
#    github-username:

# TODO: will this work?
# # Set colors.
# # https://docs.haskellstack.org/en/stable/yaml_configuration/#stack-colors
# stack-colors: error=31:good=32:shell=35:dir=34:recommendation=32:target=95:module=35:package-component=95

# https://downloads.haskell.org/~ghc/master/users-guide/using-warnings.html
# https://medium.com/mercury-bank/enable-all-the-warnings-a0517bc081c3

ghc-options:
  # `-Weverything`:  Enable all warnings so we can disable the ones we don't want.
  # https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/using-warnings.html#ghc-flag--Weverything

  # `-Wno-missing-local-signatures`:  Polymorphic local bindings are harmless.
  # https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/using-warnings.html#ghc-flag--Wmissing-local-signatures

  # `-Wno-missing-import-lists`:  Explicit imports for every function (e.g. `$`)
  # is too strict.
  # https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/using-warnings.html#ghc-flag--Wmissing-import-lists

  # `-Wno-missing-exported-signatures`:  `missing-exported-signatures` turns off
  # the stricter `-Wmissing-signatures`.
  # https://ghc.haskell.org/trac/ghc/ticket/14794#ticket
  # https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/using-warnings.html#ghc-flag--Wmissing-exported-signatures

  # `-Wno-all-missed-specialisations`, `-Wno-missed-specialisations`:  When GHC
  # can't specialize a polymorphic function.  No big deal and requires fixing
  # underlying libraries to solve.  Though, perhaps useful under certain
  # performance optimization scenarios.
  # https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/using-warnings.html#ghc-flag--Wall-missed-specialisations
  # https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/using-warnings.html#ghc-flag--Wmissed-specialisations

  # `-Wno-monomorphism-restriction`: The monomorphism restriction adds confusion
  # without being that impactful.
  # https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/using-warnings.html#ghc-flag--Wmonomorphism-restriction

  # `-Wno-implicit-prelude`:  Having the standard Prelude library implicitly
  # available is convenient.
  # https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/using-warnings.html#ghc-flag--Wimplicit-prelude

  # `-Wno-type-defaults`:  `-Wtype-defaults` will complain about normal
  # expressions like `5 + 5`.
  # https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/using-warnings.html#ghc-flag--Wtype-defaults

  # `-Wno-trustworthy-safe`, `-Wno-safe`, `-Wno-unsafe`:  These are only useful
  # if using Safe Haskell.
  # https://wiki.haskell.org/Safe_Haskell
  # https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/safe_haskell.html
  # https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/safe_haskell.html?highlight=trustworthy-safe#ghc-flag--Wtrustworthy-safe
  # https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/safe_haskell.html?highlight=trustworthy-safe#ghc-flag--Wsafe
  # https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/safe_haskell.html?highlight=trustworthy-safe#ghc-flag--Wunsafe

  #  `-Werror`: Treat all warnings like fatal errors.
  #  https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/using-warnings.html#ghc-flag--Werror

  "$targets": -Weverything -Wno-missing-exported-signatures -Wno-missing-local-signatures -Wno-missing-import-lists -Wno-all-missed-specialisations -Wno-missed-specialisations -Wno-monomorphism-restriction -Wno-implicit-prelude -Wno-type-defaults -Wno-trustworthy-safe -Wno-safe -Wno-unsafe -Werror
